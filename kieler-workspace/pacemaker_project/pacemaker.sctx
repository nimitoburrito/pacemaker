#resource "timing.h"
#hostcode-c "#include \"timing.h\""
#hostcode-c "#include <stdio.h>"
@ClocksUseSD
scchart Pacemaker{
  
  host "int" AVI = `AVI_VALUE`
  host "int" AEI = `AEI_VALUE`
  host "int" PVARP = `PVARP_VALUE`
  host "int" VRP = `VRP_VALUE`
  host "int" LRI = `LRI_VALUE`
  host "int" URI = `URI_VALUE`
  
  input signal AS, VS
  output signal AP, VP
  
  signal v_event, a_event, URI_timeout

    region LRI {
      clock x = 0
      initial state idle
      if v_event go to active
      state active {
        entry do x = 0
      }
      if pre(v_event) go to active
      if x >= LRI do VP go to active
     }
    
    region URI {
      clock x = 0
      initial state idle
      if v_event go to active
      state active {
        entry do x = 0
        during do URI_timeout
      }
      if x >= URI go to idle 
     }
    
    region PVARP {
      clock x = 0
      initial state idle
      if AS || AP do a_event go to idle
      if v_event go to active
      state active {
        entry do x = 0
      }
        if x >= PVARP go to idle
    }
  
    region VRP {
      clock x = 0
      initial state idle
      if VS || VP do v_event go to active
      state active {
        entry do x = 0
      }
        if x >= VRP go to idle
    }
    
     region AVI {
      clock x = 0
      initial state idle
      if a_event go to active
      state active {
        entry do x = 0
      }
        if pre(v_event) go to idle
        if x >= AVI go to uri_wait
        
      state uri_wait
        immediate if !URI_timeout do VP go to idle
    }
  
      region AEI {
      clock x = 0
      initial state idle
      if v_event go to active
      state active {
        entry do x = 0
      }
        if pre(a_event) go to idle
        if x >= AEI do AP go to idle
    }
}